.TH taskopenrc 5 2019-02-02 "taskopen v1.1.4" "User Manuals"

.SH NAME
taskopenrc \- Configuration file for the
.BR taskopen (1)
command

.SH SYNOPSIS
.B ~/.taskopenrc
.br
.B taskopen -c /path/to/taskopenrc

.SH DESCRIPTION
.B taskopen
obtains its configuration data from a file called
.I ~/.taskopenrc
in the user's home directory.

Each line in the taskopenrc file is either an assignment, a comment or empty.

An assignment consists of a variable name and a value separated by the equal sign ("="):

.RS
<variable name>=<value>
.RE

where the variable name is one of the names below.

A hash mark ("#") can be used to mark the beginning of a comment line.

.SH CONFIGURATION VARIABLES
Valid variable names and their default values are:

.SS General configuration
.TP
.BR BROWSER=xdg-open $FILE &>/dev/null
The executable which will be used to open URIs.

.TP
.BR EDITOR=vim
Your preferred editor.

.TP
.BR FILE_CMD=xdg-open
Command to be used for opening non-text files.

.TP
.BR TASKBIN=task
The path to your taskwarrior binary.

.TP
.BR PATH_EXT=/usr/share/taskopen/scripts
The given path(s) will be prepended to taskopen's PATH variable. The default value depends on the installation path.

.TP
.BR DEBUG=0
Set this to '1' if you want to enable additional debugging output.

.SS "Notes" files

.TP
.BR NOTES_FOLDER=$HOME/tasknotes/
The directory in which the Notes files will be stored.

.TP
.BR NOTES_EXT=.txt
The file extension used for Notes files.

.TP
.BR NOTES_FILE
This sets the actual path of the Notes files. The string "UUID" will be replaced with the task's UUID. If not set, the value will be assembled by taking NOTES_FOLDER and NOTES_EXT: ${NOTES_FOLDER}UUID${NOTES_EXT}

.TP
.BR NOTES_CMD
Sets the command that will be executed to open a Notes file. If not set, the value will be assembled by taking EDITOR and NOTES_FILE: ${EDITOR} "${NOTES_FILE}".

.TP
.BR NOTES_REGEX=Notes
The regular expression which identifies an annotation as a link to the Notes file.

.SS Default arguments

.TP
.BR DEFAULT_FILTER=status.is:pending
The default taskwarrior filter that will be applied to all queries. Can be deactivated by using the -a or -A switches.

.TP
.BR DEFAULT_SORT
Specify the default sorting which may be overridden by the -s option.

.TP
.BR "DEFAULT-i=ls -la"
Default command for the -i parameter which allows using -i without an argument.

.TP
.BR DEFAULT-x
Default command for the -x parameter which allows using -x without an argument.

.SS Classification

.TP
.BR BROWSER_REGEX=www|http
The regular expression which identifies annotations openable by BROWSER.

.TP
.BR FILE_REGEX="\(rs.|\(rs/|~"
The regular expression that identifies file paths in annotations which will be opened by EDITOR or xdg-open.

.TP
.BR TEXT_REGEX
This regular expression identifies annotations that can be edited in raw mode (see '-r'). If set and no
other regular expression matches the annotation, the EDITOR will be invoked to edit the annotation.

.TP
.BR CUSTOM1_REGEX
The regular expression that identifies annotations openable by CUSTOM1_CMD.

.TP
.BR CUSTOM1_CMD
The command with which annotations matching CUSTOM1_REGEX will be opened. You may use the following
environment variables: $FILE, $UUID, $ID, $LABEL, $ANNOTATION and $LAST_MATCH. By Default, the value of $FILE
will be appended to the command. See
.BR taskopen (1)
for further details.

.TP
.BR CUSTOM[0-9]+_REGEX
see CUSTOM1_REGEX

.TP
.BR CUSTOM[0-9]+_CMD
see CUSTOM1_CMD


.TP
.BR NO_ANNOTATION_HOOK
Execute an arbitrary script if there is no annotation found. The corresponding taskwarrior IDs will
be passed as arguments, e.g. "attach.sh 21 42"

.TP
.BR TASK_ATTRIBUTES
Add arbitrary taskwarrior attributes (comma separated) as sort keys and environment variables for
use within user commands. In order to prevent name conflicts, the corresponding sort keys are preceded by "task_" (e.g.
"task_project"). Environment variables are additionally in upper case (e.g. TASK_PROJECT).

.SH EXAMPLES

.SS "Using different file extensions for Notes files"

.BR NOTES_REGEX="Notes\.(.*)"
.br
.BR "NOTES_CMD=\(dqeditnote /path/to/tasknotes/$UUID.$LAST_MATCH \(dq$TASK_DESCRIPTION\(dq $UUID\(dq"
.br
.BR "NO_ANNOTATION_HOOK=addnote"
.br
.BR "TASK_ATTRIBUTES=description"

.SS "Using the notes.vim plugin for Notes files"

.BR NOTES_FOLDER=$HOME/Notes/vimnotes
.br
.BR NOTES_EXT=""
.br
.BR "NOTES_CMD=\(dqvim -c \(dq:Note $UUID\(dq\(dq"

.IP
The notes.vim plugin can be found at
.I <http://peterodding.com/code/vim/notes/>

.SS "Link to mutt emails"
.BR CUSTOM1_REGEX=Message-[iI][dD]:|message:
.br
.BR "CUSTOM1_CMD=\(dqecho \(dq$FILE\(dq | muttjump\(dq"

.IP
Thanks to Jostein Berntsen, the old bash version of taskopen had support for linking to your emails by using mutt. This feature can still be enabled by setting the CUSTOM1_REGEX and CUSTOM1_CMD appropriately, given that taskopen's PATH contains the path to the corresponding helper scripts (see PATH_EXT).

Taskopen then uses muttjump to open the mutt mailboxes natively or in a screen window (very quick
and effective). The muttjump can be found at
.I <https://github.com/weisslj/muttjump>

.SS "Integrating user-defined attributes (UDAs)"

.BR TASK_ATTRIBUTES=url,costs
.br
.BR "CUSTOM1_REGEX=URL"
.br
.BR "CUSTOM1_CMD=\(dqxdg-open $TASK_URL\(dq"
.br
.BR "DEFAULT_SORT=\(dqtask_costs-,id+\(dq"

.IP
You can make taskopen agnostic to any taskwarrior attributes by adding them to TASK_ATTRIBUTES.
This enables the use of these attributes within user commands (see taskopen (1)) or as
sort keys.

.SH "CREDITS & COPYRIGHTS"
Copyright (C) 2010 \- 2016, J. Schlatow

Taskopen is distributed under the GNU General Public License. See
.I http://www.opensource.org/licenses/gpl-2.0.php
for more information.

.SH SEE ALSO
.BR taskopen (1)

For more information regarding taskopen, see the following:

.TP
The official site at
.I <https://github.com/ValiValpas/taskopen/>

.TP
The official code repository at
.I <git://github.com/ValiValpas/taskopen.git>

.SH REPORTING BUGS
.TP
Bugs in taskopen may be reported to the issue-tracker at
.I <https://github.com/ValiValpas/taskopen/issues>
